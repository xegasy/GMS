<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// 変数の初期化

state = STATE_STAND;

tAnim = 0;

subImage = 0;

dir = DIR_RIGHT;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// 横移動

hspeed = 0;

if (keyboard_check(vk_left)) {
    dir = DIR_LEFT;
    if (place_free(x - PLAYER_HSPEED, y)) {
        hspeed = -PLAYER_HSPEED;
    } else {
        move_contact_solid(180, PLAYER_HSPEED);
    }
} else if (keyboard_check(vk_right)) {
    dir = DIR_RIGHT;
    if (place_free(x + PLAYER_HSPEED, y)) {
        hspeed = PLAYER_HSPEED;
    } else {
        move_contact_solid(0, PLAYER_HSPEED);
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// ジャンプ

if (keyboard_check_pressed(vk_space)) {
    if (place_free(x, y + 1) == false) {
        vspeed = -PLAYER_VSPEED;
        gravity = PLAYER_GRAVITY;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// 落下

if (place_free(x, y + 1)) {
    gravity = PLAYER_GRAVITY;
} else {
    gravity = 0;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// 状態判定

if (hspeed == 0 and vspeed == 0) {
    state = STATE_STAND;
} else if (hspeed != 0 and vspeed == 0) {
    state = STATE_RUN;
} else if (vspeed != 0) {
    state = STATE_JUMP;
}

tAnim++;

switch(state) {
    case STATE_STAND:
        subImage = 0;
        if (tAnim % 120 &gt; 110) {
            subImage = 1;
        }
        break;
    case STATE_RUN:
        subImage = 2;
        if (tAnim % 12 &lt; 6) {
            subImage = 3;
        }
        break;
    case STATE_JUMP:
        subImage = 2;
        break;
    case STATE_DAMAGE:
        subImage = 5;
        if (tAnim % 4 &lt; 2) {
            subImage = 6;
        }
        break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_wall">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// 壁との衝突判定

if (vspeed &lt; 0) {
    move_contact_solid(90, abs(vspeed));
    vspeed = 0;
} else {
    move_contact_solid(270, abs(vspeed));
    gravity = 0;
    vspeed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Player 描画

if (dir == DIR_RIGHT) {
    draw_sprite(spr_player, subImage, x, y);
} else {
    var px = x + sprite_width;
    var py = y;
    var scX = -1;
    var scY = 1;
    var rot = 0;
    var col = c_white;
    var a = 1;
    
    draw_sprite_ext(spr_player, subImage, px, py, scX, scY, rot, col, a);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
